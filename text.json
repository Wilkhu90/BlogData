[
    {
      "item": 0,
      "title": "Parsing JSON file to create custom HTML",
      "description": "Learn the easiest way to parse JSON into HTML",
      "imageUrl": "https://lh3.googleusercontent.com/yspLZijZH9NAlb-ASuUi5xSfT2Ma7LeoZJdyr6wDN28gcHx1B0PgoUlQD4lMl0X2_xTvdmRe=w914-h509-no",
      "gist": "Ahhh!! My First post in the interWebs. Let's see....",
      "data": [
                {
                  "p": {"text": "Ahhh!! My First post in the interWebs. Let's see...."}
                },
                {
                  "br": {"text": ""}
                },
                {
                  "p": {"text": "I won't bore you off with a long introduction about me. Let just get right to the business. so, recently, I started a personal project of mine. It had a blog section in it and I wanted to update the blogs constantly but (Here's the big catch), without touching the production code."}
                },
                {
                  "p": {"text": "so, I took this challenge and here's the result of it. I broke the html into it's constituent elements and decided to put them into a JSON file structure like one example shown below."}
                },
                {
                  "pre": {
                    "text": "{'Data':[\n\t{'p':{'text':'Lorem Ipsum 5 Lorem Ipsum Lorem Ipsum'}},\n\t{'a':{'text':'link','attr':{'href':'#/','target':'_blank'}}},\n\t{'p':{'text':'Lorem Ipsum 5 Lorem Ipsum Lorem Ipsum'}},\n\t{'img':{'text':'','attr':{'src':'imagesFolder/DV.png','style':'width: 100%'}}},\n\t{'pre':{'text':'yo wahs','attr':{'align':'center','style':'width: 280px; text-align: center'}}}\n\t]\n}",
                    "attr": {"align": "left", "style": "width: 80%; height: 100%; background-color: black; color: white"}
                  }
                },
                {
                  "br": {"text": ""}
                },
                {
                  "p": {"text": "'Data' is the key here(No pun intended) and it's value is essentially the whole blog itself, broken into html tags and the content which will eventually be associated with those tags. Next step was to decide where to get the JSON data from (As it's not residing in my server). I choose dropbox for that and put the JSON file in the main folder of dropbox. With a little effort, I was able to read the file from dropbox with some AngularJS's $http magic. Hence, I was able to fetch the data into the blog controller. Now, comes some more fun stuff."}
                },
                {
                  "pre": {
                    "text": "var html = $scope.Post.data;\nfor (var key in html) {\n\tif (html.hasOwnProperty(key)) {\n\t\tfor(var val in html[key]) {\n\t\t\tvar node = document.createElement(val);\n\t\t\tvar textnode = document.createTextNode(html[key][val].text);\n\t\t\tif(html[key][val].hasOwnProperty('attr')){\n\t\t\t\tfor(var prop in html[key][val].attr){\n\t\t\t\t\tnode.setAttribute(prop, html[key][val].attr[prop]);\n\t\t\t\t}\n\t\t\t}\n\t\tnode.appendChild(textnode);\n\t\tdocument.getElementById('substance').appendChild(node);\n\t\t}\n\t}\n}",
                    "attr": {
                      "align": "left",
                      "style": "width: 80%; height: 100%; background-color: black; color: white"
                    }
                  }
                },
                {
                  "br": {"text": ""}
                },
                {
                  "p": {"text": "With this ridiculously simple but not so elegant looking code(mentioned above), I was able to extract the data from the JSON file and present the data in an HTML format. It worked like a charm and that was the first attempt at making it all work. To give you the proof of concept, I'd like to point out that this blog application is actually running because of the above mentioned snippets and utilizing the JSON data pulled from my dropbox in order to create these blogs."}
                },
                {
                  "p": {"text": "Well, this all works but does it really!!?? As soon as I finished writing the blog App, I realized that these nested for loops are essentially doing what a Depth First Search traversal(D.F.S.) would do and I'm currently working to make it smart by taking a DFS approach for putting the HTML elements in their respective positions and eventually, creating a DOM tree out of these JSON tags. This DOM tree can then easily be attached to the existing HTML. I'll probably update this post once I complete integration of the new idea. Till then, Adios."}
                },
                {
                  "p": {"text": "P.S. For those who are thinking, 'Why didn't I use MongoDB?'. Well, I can easily do all this with Databases but this Single Page Application is deployed on Heroku and in order to create a DB instance, I would have to purchase the subscription. I find no shame in telling that this Single Page Application is free of cost and I don't wish to spend money on it right now."}
                }
              ]
    },
    {
        "item": 1,
      "title": "Single Page Application with Full-Stack in a few minutes",
      "description": "Learn How to make a Single Page App in quickest possible way",
      "imageUrl": "https://material.angularjs.org/latest/img/washedout.png",
      "gist": "In my brief experience dealing with MEAN stack....",
      "data": [
        {
          "p": {"text": "In my brief experience dealing with MEAN stack applications, I discovered that although there are a lot of good resources out there which talks about making a Single Page Application from scratch and then there are some other resources scattered across the Internet that deals with deploying and testing the application on the cloud. But, there's not a single resource that puts it all together. Let me help you by saving some of your precious time. This blog post is an attempt at putting it all together. Alright, Let's get right into some good stuff."}
        },
        {
          "p": {"text": "Before you begin, there are couple of dependencies that you have take care of. Now, I'm working on a Linux machine and I'll assume that everybody reading this is familiar with it and using it. Let's Quickly check whether you have Node.js & NPM available installed in your machine by typing these commands:"}
        },
        {
            "pre": {"text": "$ node -v\nv4.4.2\n$ npm -v\n3.8.7" ,
            "attr": {
                      "align": "left",
                      "style": "width: 80%; height: 100%; background-color: black; color: white"
                }   
            }
        },
        {
            "p": {"text": "Make sure you have these versions or higher installed for node and npm on your system. If everything looks good, then proceed with installing a bunch of goodies."}
        },
        {
            "p": {"text": "1) grunt-cli - Grunt is essentially a task manager that will help in managing and automatting the tasks that you would usually do manually while creating/managing an application. For Example: Everytime you make a change in your application, you would usually restart you server and load the changes and refresh the web views on your browser. With grunt task manager, all these mundane tasks gets automatted. You can read more about it on their website. Please read about it, if you're clueless."}
        },
        {
            "p": {"text": "2) bower - Bower is another package manager. Now you must be thinking 'why do I need another package manager? Why not use npm instead?'. Well, bower specifically deals with managing & installing dependencies from a front-end development's point of view. For Example: If you wish to use angular-material design in your front-end, then you will have to install the specific javascript files in your system, then put the links in the web views and then inject them in application. Well, bower takes care of all that facade for you."}
        },
        {
            "p": {"text": "3) Yo - Short for Yeoman, a powerful scaffolding tool for webapps, is a tool that helps you kickstart a project within a matter of few seconds. It takes help from the concept of generators and helps in creating an ecosystem for the kind of application you want to develop. A generator is basically a plugin that can be run with the `yo` command to scaffold complete projects or useful parts. Learn more about yo through their website."}
        },
        {
            "p": {"text": "4) generator-karma - It's a Yeoman generator used for testing your web applications. Karma has the ability to do Unit and e2e testing by running your test-cases directly on the browser. This eliminates the manual intervention required for testing your web apps."}
        },
        {
            "p": {"text": "5) generator-angular - Another Yoeman generator that helps in creating angular projects. There are other options available online like Mean.io or Meanjs generator. You can check them out on Yeoman's generator website."}
        },
        {
            "p": {"text": "In order to install all these goodies, all you have to do is type in this command and be patient as , it will take some time:"}
        },
        {
            "pre": {"text": "$ npm install -g grunt-cli bower yo generator-karma generator-angular" ,
            "attr": {
                      "align": "left",
                      "style": "width: 80%; height: 100%; background-color: black; color: white"
                }   
            }
        },
        {
            "p": {"text": "I know it takes some time but it's worth installing all this. Look at it from a long term perspective. You will be saving a lot of your precious time that you will use to focus on the core features of your web application. so, now that these dependencies are installed, all you have to do is create a working directory for your project and run the yo command. You'll be offered a few options like shown below."}
        },
        {
            "pre": {"text": "$ mkdir EnterProjectNameHere && cd $_\n$ yo" ,
            "attr": {
                      "align": "left",
                      "style": "width: 80%; height: 100%; background-color: black; color: white"
                }   
            }
        },
        {
            "img": {"text":"", 
            "attr":{
                    "src":"https://lh6.googleusercontent.com/-x94it6SYHDc/Vy7ZTQ_7nFI/AAAAAAAADnU/M6EeiPXFwuQu1gtPNaexL60Fk3vzhcZjACL0B/w568-h245-no/Yo.png",
                    "style":"width: 50%"
                }
            }
        },
        {
          "br": {"text": ""}  
        },
        {
            "p": {"text": "You'll be asked a bunch of question for setting up the project and scaffolding the directory structure with best style guides out there. Once the yeoman creates/setup the project for you, you simply go ahead and open the project in any IDE of your choice like Sublime or Webstorm or whatever. If you're familiar with angular then create some cool application or if you just want to simply launch the project, then type the command mentioned below:"}
        },
        {
            "pre": {"text": "$ grunt serve",
            "attr": {
                      "align": "left",
                      "style": "width: 80%; height: 100%; background-color: black; color: white"
                }   
            }
        },
        {
            "p": {"text": "If everything was right, the application would be launched on the localhost in the default browser. Moving on to some more stuff. Now that your application has all the cool features you wanted, you'd like to launch the application on internet for everyone to use it. In order to do so you'll have to choose a service that allows you to deploy Node.js web applications. There are a couple of option out there, but I chose Heroku. You can go to there website, signup and know more about them."}
        },
        {
            "p": {"text": "Install heroku on your Linux system using this command:"}
        },
        {
            "pre": {
                "text": "$ wget -O- https://toolbelt.heroku.com/install-ubuntu.sh | sh",
                "attr": {
                      "align": "left",
                      "style": "width: 80%; height: 100%; background-color: black; color: white"
                }
            }
        },
        {
            "p": {"text": "Once installed, you'll have access to the heroku command from your command shell. Log in using the email address and password you used when creating your Heroku account:"}
        },
        {
            "pre": {
                "text": "$ heroku login\nEnter your Heroku credentials.\nEmail: adam@example.com\nPassword (typing will be hidden):\nAuthentication successful.",
                "attr": {
                      "align": "left",
                      "style": "width: 80%; height: 100%; background-color: black; color: white"
                }
            }
        },
        {
            "p": {"text": "Once you're logged in, just make sure you're in the right folder as your application that you want to deploy and create a heroku app."}
        },
        {
           "pre": {
                "text": "$ heroku create",
                "attr": {
                      "align": "left",
                      "style": "width: 80%; height: 100%; background-color: black; color: white"
                }
            } 
        },
        {
            "p": {"text": "You're almost there. Stay with me. Create 2 more files in the root directory of the application named: 'web.js' & 'Procfile'. These file should look like this:"}
        },
        {
            "label": {"text": "web.js"}
        },
        {
            "pre": {
                "text": "var gzippo = require('gzippo');\nvar express = require('express');\nvar morgan = require('morgan');\nvar app = express();\napp.use(morgan('dev'));\napp.use(gzippo.staticGzip('' + __dirname + '/dist'));\napp.listen(process.env.PORT || 5000);",
                "attr": {
                      "align": "left",
                      "style": "width: 80%; height: 100%; background-color: black; color: white"
                }
            } 
        },
        {
            "label": {"text": "Procfile"}
        },
        {
            "pre": {
                "text": "web: node web.js",
                "attr": {
                      "align": "left",
                      "style": "width: 80%; height: 100%; background-color: black; color: white"
                }
            } 
        },
        {
            "p": {"text": "Now that all the files are ready to be deployed, all you have to do is run these commands:"}
        },
        {
            "pre": {
                "text": "$ git init\n$ grunt build\n$ git status\n$ git add .\n$ git commit -m 'Meaningful message.'\n$ git push heroku master",
                "attr": {
                      "align": "left",
                      "style": "width: 80%; height: 100%; background-color: black; color: white"
                }
            }
        },
        {
            "p": {"text": "If you did everything error free then you my friend just deployed your application on the interwebs. Congratulations!! In order to visit your application online, just write this magical command."}
        },
        {
            "pre": {
                "text": "$ heroku open",
                "attr": {
                      "align": "left",
                      "style": "width: 80%; height: 100%; background-color: black; color: white"
                }
            }
        },
        {
            "p": {"text": "Well, I hope you liked reading this blog. I enjoyed writing it and now, I'll probably go to sleep. Adios..."}
        }
      ]
    },
    {
        "item": 2,
      "title": "Home Security with Raspberry Pi 2 and simple sensors",
      "description": "Learn How to secure your home with this simple Rpi2 hack",
      "imageUrl": "http://www.modmypi.com/image/cache/data/rpi-products/raspberry-pi-2-model-b/rpi-2-model-b_5-800x609.jpg",
      "gist": "In Progress....",
      "data": [
        {
          "p": {"text": "In Progress...."}
        }
      ]
    },
    {
        "item": 3,
      "title": "Data Analysis for Industrial IoT project using MTConnect for MTConnect Challenge",
      "description": "An Application challege that I took for making a web App for utilizing power of MTConnect",
      "imageUrl": "http://www.mmsonline.com/cdn/cms/mtconnectblog.jpg",
      "gist": "In Progress....",
      "data": [
        {
          "p": {"text": "In Progress...."}
        }
      ]
    },
    {
        "item": 4,
      "title": "Ionic & Cordova for making my Blog App in a matter of few minutes",
      "description": "Learn How I made an android app for my Blog using Ionic-framework",
      "imageUrl": "https://lh3.googleusercontent.com/-dbdnc97VLy0/VzAs_mlrK9I/AAAAAAAADos/A1UEjRsOQzwnJdFh2427BKIm8xre6Ek_QCL0B/w474-h862-no/ionic.png",
      "gist": "In Progress....",
      "data": [
        {
          "p": {"text": "In Progress...."}
        }
      ]
    },
    {
        "item": 5,
      "title": "Voice2HTML - Using your voice to create HTML.",
      "description": "Learn How I create HTML page using my voice",
      "imageUrl": "https://lh3.googleusercontent.com/-wX8o-EPJgSg/VzQzTdq2jrI/AAAAAAAADq4/zKDLCZIYoJ0p3bwAu1WvrsXYoXK6SCenQCL0B/w1533-h869-no/Voice2HTML.png",
      "gist": "In Progress....",
      "data": [
        {
          "p": {"text": "In Progress...."}
        }
      ]
    },
    {
        "item": 6,
      "title": "Artificial Intelligence - Play Sudoku and solve it using AI.",
      "description": "A Pure Javascript based Sudoku Generator and Solver based on AI algorithm with pruning.",
      "imageUrl": "https://raw.githubusercontent.com/Wilkhu90/SudokuJS.AI/master/img/Sudoku1.png",
      "gist": "",
      "data": [
                {
                  "h1": {"text": "SudokuJS.AI"}
                },
                {
                  "br": {"text": ""}
                },
                {
                  "h3": {"text": "A Pure Javascript based Sudoku Generator and Solver based on AI algorithm with pruning. The code is highly reusable and works with HTML5 canvas."}
                },
                {
                  "h3": {"text": "Check out the game play and view the code on github."}
                },
                {
                    "a": {"text": "Play Game here",
                            "attr": {
                                "href": "#/sudoku"
                            }
                         }
                },
                {
                  "br": {"text": ""}
                },
                {
                    "a": {"text": "View code on Github",
                            "attr": {
                                "href": "https://github.com/Wilkhu90/SudokuJS.AI"
                            }
                         }
                },
                {
                    "img": {"text":"", 
                    "attr":{
                            "src":"https://raw.githubusercontent.com/Wilkhu90/SudokuJS.AI/master/img/Sudoku1.png",
                            "style":"width: 50%"
                        }
                    }
                },
                {
                    "img": {"text":"", 
                    "attr":{
                            "src":"https://raw.githubusercontent.com/Wilkhu90/SudokuJS.AI/master/img/Sudoku2.png",
                            "style":"width: 50%"
                        }
                    }
                }
      ]
    }

]

